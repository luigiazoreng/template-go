// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/product": {
            "get": {
                "description": "This endpoint is used to...",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get Product",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "403": {
                        "description": "Unauthorized, check HTTP Authorization header"
                    }
                }
            },
            "post": {
                "description": "this endpoint is used for...",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Post Product",
                "parameters": [
                    {
                        "description": "Provide product details in the request body",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Product_POST_Body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "403": {
                        "description": "Unauthorized, check HTTP Authorization header"
                    }
                }
            },
            "delete": {
                "description": "This endpoint is used to delete product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Delete Product",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "403": {
                        "description": "Unauthorized, check HTTP Authorization header"
                    }
                }
            },
            "patch": {
                "description": "this endpoint is used for...",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Patch Product",
                "parameters": [
                    {
                        "description": "Provide product details in the request body",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Product_PATCH_Body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "403": {
                        "description": "Unauthorized, check HTTP Authorization header"
                    }
                }
            }
        }
    },
    "definitions": {
        "types.Product_PATCH_Body": {
            "type": "object"
        },
        "types.Product_POST_Body": {
            "type": "object"
        },
        "types.Response": {
            "type": "object"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Template-Go Microservice",
	Description:      "API template",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
